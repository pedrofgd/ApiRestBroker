var threshold = 10

var data = stream
    |from()
        .measurement('metricas_recursos')
    |groupBy('nome_recurso', 'nome_provedor')
data
    |stateCount(lambda: "sucesso" == 0) // Contagens de erros retornados pelo provedor em um recurso
        .as('consecutive_error')
    |alert()
        .id('status_provedor_{{ index .Tags "nome_recurso" }}{{ index .Tags "nome_provedor" }}')
        .details('The past {{ index .Fields "consecutive_error" }} requests for "nome_recurso": {{ index .Tags "nome_recurso" }} and "nome_provedor": {{ index .Tags "nome_provedor" }} were considered to change to this level alert.')
        .info(lambda: "sucesso" == 1)
        .crit(lambda: "consecutive_error" >= threshold)
        .log('/var/log/kapacitor/alerts-errors.log')
        .post({{KAPACITOR_WEBHOOK_URL}})
            .skipSSLVerification()
        .stateChangesOnly()
        .noRecoveries() // Preventing OK-level alerts